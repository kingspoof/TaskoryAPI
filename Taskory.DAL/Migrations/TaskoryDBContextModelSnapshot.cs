// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taskory.DAL;

namespace Taskory.DAL.Migrations
{
    [DbContext(typeof(TaskoryDBContext))]
    partial class TaskoryDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Taskory.DAL.Models.Organisation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AdministratorID");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("Taskory.DAL.Models.Task", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descriprion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganisationID")
                        .HasColumnType("int");

                    b.Property<int>("RepeatAfterXDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrganisationID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Taskory.DAL.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AuthentificationTempelate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganisationID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("OrganisationID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Taskory.DAL.Models.Organisation", b =>
                {
                    b.HasOne("Taskory.DAL.Models.User", "Administrator")
                        .WithMany()
                        .HasForeignKey("AdministratorID");

                    b.Navigation("Administrator");
                });

            modelBuilder.Entity("Taskory.DAL.Models.Task", b =>
                {
                    b.HasOne("Taskory.DAL.Models.Organisation", null)
                        .WithMany("Tasks")
                        .HasForeignKey("OrganisationID");
                });

            modelBuilder.Entity("Taskory.DAL.Models.User", b =>
                {
                    b.HasOne("Taskory.DAL.Models.Organisation", null)
                        .WithMany("Users")
                        .HasForeignKey("OrganisationID");
                });

            modelBuilder.Entity("Taskory.DAL.Models.Organisation", b =>
                {
                    b.Navigation("Tasks");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
