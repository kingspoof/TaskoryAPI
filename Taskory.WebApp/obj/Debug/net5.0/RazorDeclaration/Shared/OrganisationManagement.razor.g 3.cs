// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Taskory.WebApp.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/_Imports.razor"
using Taskory.WebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/_Imports.razor"
using Taskory.WebApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/Shared/OrganisationManagement.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
    public partial class OrganisationManagement : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 73 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/Shared/OrganisationManagement.razor"
                                                                                                                          
    List<Organisation> orgs { get; set; }


    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        HttpClient client = new HttpClient();
        if (orgs == null)
            orgs = new List<Organisation>();
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 82 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/Shared/OrganisationManagement.razor"
         foreach (Organisation o in orgs)
        {
            if (o.Tasks == null) o.Tasks = new List<WebApp.Task>();
            if (o.Users == null) o.Users = new List<User>();
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 86 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/Shared/OrganisationManagement.razor"
         

        client.BaseAddress = new Uri(configuration["API"]);
        var response = await client.GetAsync("api/Organisations");
        orgs = await response.Content.ReadFromJsonAsync<List<Organisation>>();
    }

    private async System.Threading.Tasks.Task delete(int id)
    {
        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri(configuration["API"]);

        var o = orgs.FirstOrDefault(n => n.ID == id);
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            // Delete!
            o.Deleted = true;
            if (o.Tasks == null) o.Tasks = new List<WebApp.Task>();
            if (o.Users == null) o.Users = new List<User>();

            

#line default
#line hidden
#nullable disable
#nullable restore
#line 107 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/Shared/OrganisationManagement.razor"
             foreach (var n in o.Tasks)
                n.Deleted = true;

#line default
#line hidden
#nullable disable
#nullable restore
#line 109 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/Shared/OrganisationManagement.razor"
             foreach (var n in o.Users)
                o.Deleted = true;

#line default
#line hidden
#nullable disable
#nullable restore
#line 110 "/Users/lucienkaser/Documents/Development/Taskory.git/Taskory.WebApp/Shared/OrganisationManagement.razor"
                                 

            client.BaseAddress = new Uri(configuration["API"]);
            var result = await client.PutAsJsonAsync($"api/Organisations/{id}?transpondercode={loginstate.Transmitioncode}", o);

            await reload(id);
        }
    }

    private async System.Threading.Tasks.Task cancel(int id)
    {
        await reload(id);
    }
    private async System.Threading.Tasks.Task save(int id)
    {
        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri(configuration["API"]);
        var o = orgs.FirstOrDefault(n => n.ID == id);
        var result = await client.PutAsJsonAsync($"api/Organisations/{id}?transpondercode={loginstate.Transmitioncode}", o);
        await reload(id);
    }

    private async System.Threading.Tasks.Task reload(int id)
    {
        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri(configuration["API"]);
        var target = orgs.FirstOrDefault(n => n.ID == id);
        var result = await client.GetAsync($"api/Organisations/{id}");
        Organisation temp = await result.Content.ReadFromJsonAsync<Organisation>();
        target = temp;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private LoginState loginstate { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IConfiguration configuration { get; set; }
    }
}
#pragma warning restore 1591
